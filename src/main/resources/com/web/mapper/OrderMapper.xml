<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Order">
    <id column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
    <result column="orderItems" jdbcType="INTEGER" property="orderitems" />
    <result column="orderDate" jdbcType="VARCHAR" property="orderdate" />
    <result column="deliveryDate" jdbcType="VARCHAR" property="deliverydate" />
    <result column="agent" jdbcType="INTEGER" property="agent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderId, supplierId, orderItems, orderDate, deliveryDate, agent
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Order">
    insert into order (orderId, supplierId, orderItems, 
      orderDate, deliveryDate, agent
      )
    values (#{orderid,jdbcType=INTEGER}, #{supplierid,jdbcType=INTEGER}, #{orderitems,jdbcType=INTEGER}, 
      #{orderdate,jdbcType=VARCHAR}, #{deliverydate,jdbcType=VARCHAR}, #{agent,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        orderId,
      </if>
      <if test="supplierid != null">
        supplierId,
      </if>
      <if test="orderitems != null">
        orderItems,
      </if>
      <if test="orderdate != null">
        orderDate,
      </if>
      <if test="deliverydate != null">
        deliveryDate,
      </if>
      <if test="agent != null">
        agent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null">
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="orderitems != null">
        #{orderitems,jdbcType=INTEGER},
      </if>
      <if test="orderdate != null">
        #{orderdate,jdbcType=VARCHAR},
      </if>
      <if test="deliverydate != null">
        #{deliverydate,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        #{agent,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.supplierid != null">
        supplierId = #{record.supplierid,jdbcType=INTEGER},
      </if>
      <if test="record.orderitems != null">
        orderItems = #{record.orderitems,jdbcType=INTEGER},
      </if>
      <if test="record.orderdate != null">
        orderDate = #{record.orderdate,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverydate != null">
        deliveryDate = #{record.deliverydate,jdbcType=VARCHAR},
      </if>
      <if test="record.agent != null">
        agent = #{record.agent,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set orderId = #{record.orderid,jdbcType=INTEGER},
      supplierId = #{record.supplierid,jdbcType=INTEGER},
      orderItems = #{record.orderitems,jdbcType=INTEGER},
      orderDate = #{record.orderdate,jdbcType=VARCHAR},
      deliveryDate = #{record.deliverydate,jdbcType=VARCHAR},
      agent = #{record.agent,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Order">
    update order
    <set>
      <if test="supplierid != null">
        supplierId = #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="orderitems != null">
        orderItems = #{orderitems,jdbcType=INTEGER},
      </if>
      <if test="orderdate != null">
        orderDate = #{orderdate,jdbcType=VARCHAR},
      </if>
      <if test="deliverydate != null">
        deliveryDate = #{deliverydate,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Order">
    update order
    set supplierId = #{supplierid,jdbcType=INTEGER},
      orderItems = #{orderitems,jdbcType=INTEGER},
      orderDate = #{orderdate,jdbcType=VARCHAR},
      deliveryDate = #{deliverydate,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  
  <select id="getAll"  resultMap="myresultmap">
  
SELECT * 
FROM
orderdetails, drugs,`order`,supplier,user
WHERE 
orderdetails.orderId=`order`.orderId AND orderdetails.drugsId=drugs.drugsId AND  `order`.supplierId=supplier.supplierId AND `order`.agent=user.userId
  
  </select>
  
  <resultMap type="com.web.entity.Order" id="myresultmap">
  
      <id column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
    <result column="orderItems" jdbcType="INTEGER" property="orderitems" />
    <result column="orderDate" jdbcType="VARCHAR" property="orderdate" />
    <result column="deliveryDate" jdbcType="VARCHAR" property="deliverydate" />
    <result column="agent" jdbcType="INTEGER" property="agent" />
       <!-- 多对一 -->
       
        <association property="orderdetails"  javaType="com.web.entity.Orderdetails" >
        
         <id column="orderDetailsId" jdbcType="INTEGER" property="orderdetailsid" />
    <result column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="drugsId" jdbcType="INTEGER" property="drugsid" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="drugAmount" jdbcType="INTEGER" property="drugamount" />
    <result column="drugPrice" jdbcType="DOUBLE" property="drugprice" />
    <result column="batchNumber" jdbcType="VARCHAR" property="batchnumber" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
    
       <association property="drugs" javaType="com.web.entity.Drugs"  >
       <id column="drugsId" jdbcType="INTEGER" property="drugsid" />
    <result column="drugStorageid" jdbcType="INTEGER" property="drugstorageid" />
    <result column="drugsName" jdbcType="VARCHAR" property="drugsname" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="manufactureDate" jdbcType="VARCHAR" property="manufacturedate" />
    <result column="guaranteeTime" jdbcType="VARCHAR" property="guaranteetime" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
       </association>
    
    </association>
		    <association property="user" javaType="com.web.entity.User">
					   <id column="userId" jdbcType="INTEGER" property="userid" />
			    <result column="userName" jdbcType="VARCHAR" property="username" />
			    <result column="userPwd" jdbcType="VARCHAR" property="userpwd" />
			    <result column="userSex" jdbcType="VARCHAR" property="usersex" />
			    <result column="userPhoto" jdbcType="VARCHAR" property="userphoto" />
			    <result column="userCard" jdbcType="VARCHAR" property="usercard" />
			    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
			    <result column="postId" jdbcType="INTEGER" property="postid" />
			    <result column="state" jdbcType="INTEGER" property="state" />
			    <result column="icuId" jdbcType="INTEGER" property="icuid" />
			    <result column="descc" jdbcType="VARCHAR" property="descc" />
		    </association>
		    
		    <association property="supplier" javaType="com.web.entity.Supplier" >
		        <id column="supplierId" jdbcType="INTEGER" property="supplierid" />
				    <result column="name" jdbcType="VARCHAR" property="name" />
				    <result column="address" jdbcType="VARCHAR" property="address" />
				    <result column="tel" jdbcType="VARCHAR" property="tel" />
				    <result column="creditSituation" jdbcType="VARCHAR" property="creditsituation" />
				    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
		    </association>
  </resultMap>
</mapper>