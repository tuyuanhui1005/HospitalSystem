<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.DrugsMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Drugs">
    <id column="drugsId" jdbcType="INTEGER" property="drugsid" />
    <result column="drugStorageid" jdbcType="INTEGER" property="drugstorageid" />
    <result column="drugsName" jdbcType="VARCHAR" property="drugsname" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="manufactureDate" jdbcType="VARCHAR" property="manufacturedate" />
    <result column="guaranteeTime" jdbcType="VARCHAR" property="guaranteetime" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    drugsId, drugStorageid, drugsName, specifications, amount, price, manufactureDate, 
    guaranteeTime, supplierId
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.DrugsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drugs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from drugs
    where drugsId = #{drugsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from drugs
    where drugsId = #{drugsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.DrugsExample">
    delete from drugs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Drugs">
    insert into drugs (drugsId, drugStorageid, drugsName, 
      specifications, amount, price, 
      manufactureDate, guaranteeTime, supplierId
      )
    values (#{drugsid,jdbcType=INTEGER}, #{drugstorageid,jdbcType=INTEGER}, #{drugsname,jdbcType=VARCHAR}, 
      #{specifications,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{manufacturedate,jdbcType=VARCHAR}, #{guaranteetime,jdbcType=VARCHAR}, #{supplierid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Drugs">
    insert into drugs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="drugsid != null">
        drugsId,
      </if>
      <if test="drugstorageid != null">
        drugStorageid,
      </if>
      <if test="drugsname != null">
        drugsName,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="manufacturedate != null">
        manufactureDate,
      </if>
      <if test="guaranteetime != null">
        guaranteeTime,
      </if>
      <if test="supplierid != null">
        supplierId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="drugsid != null">
        #{drugsid,jdbcType=INTEGER},
      </if>
      <if test="drugstorageid != null">
        #{drugstorageid,jdbcType=INTEGER},
      </if>
      <if test="drugsname != null">
        #{drugsname,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="manufacturedate != null">
        #{manufacturedate,jdbcType=VARCHAR},
      </if>
      <if test="guaranteetime != null">
        #{guaranteetime,jdbcType=VARCHAR},
      </if>
      <if test="supplierid != null">
        #{supplierid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.DrugsExample" resultType="java.lang.Long">
    select count(*) from drugs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update drugs
    <set>
      <if test="record.drugsid != null">
        drugsId = #{record.drugsid,jdbcType=INTEGER},
      </if>
      <if test="record.drugstorageid != null">
        drugStorageid = #{record.drugstorageid,jdbcType=INTEGER},
      </if>
      <if test="record.drugsname != null">
        drugsName = #{record.drugsname,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.manufacturedate != null">
        manufactureDate = #{record.manufacturedate,jdbcType=VARCHAR},
      </if>
      <if test="record.guaranteetime != null">
        guaranteeTime = #{record.guaranteetime,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierid != null">
        supplierId = #{record.supplierid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update drugs
    set drugsId = #{record.drugsid,jdbcType=INTEGER},
      drugStorageid = #{record.drugstorageid,jdbcType=INTEGER},
      drugsName = #{record.drugsname,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      manufactureDate = #{record.manufacturedate,jdbcType=VARCHAR},
      guaranteeTime = #{record.guaranteetime,jdbcType=VARCHAR},
      supplierId = #{record.supplierid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Drugs">
    update drugs
    <set>
      <if test="drugstorageid != null">
        drugStorageid = #{drugstorageid,jdbcType=INTEGER},
      </if>
      <if test="drugsname != null">
        drugsName = #{drugsname,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="manufacturedate != null">
        manufactureDate = #{manufacturedate,jdbcType=VARCHAR},
      </if>
      <if test="guaranteetime != null">
        guaranteeTime = #{guaranteetime,jdbcType=VARCHAR},
      </if>
      <if test="supplierid != null">
        supplierId = #{supplierid,jdbcType=INTEGER},
      </if>
    </set>
    where drugsId = #{drugsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Drugs">
    update drugs
    set drugStorageid = #{drugstorageid,jdbcType=INTEGER},
      drugsName = #{drugsname,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      manufactureDate = #{manufacturedate,jdbcType=VARCHAR},
      guaranteeTime = #{guaranteetime,jdbcType=VARCHAR},
      supplierId = #{supplierid,jdbcType=INTEGER}
    where drugsId = #{drugsid,jdbcType=INTEGER}
  </update>
  
  
  <!-- 添加一对一查询 -->
	<select id="getAll" parameterType="int" resultMap="MyResultMap">
		SELECT  *  from drugs d ,supplier s
         WHERE   d.supplierId=s.supplierId
	</select>
	
  <!-- 自定义结果集 -->
  <resultMap type="com.web.entity.Drugs" id="MyResultMap">
      <id column="drugsId" jdbcType="INTEGER" property="drugsid" />
    <result column="drugStorageid" jdbcType="INTEGER" property="drugstorageid" />
    <result column="drugsName" jdbcType="VARCHAR" property="drugsname" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="manufactureDate" jdbcType="VARCHAR" property="manufacturedate" />
    <result column="guaranteeTime" jdbcType="VARCHAR" property="guaranteetime" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
	    
	    <!-- 多对一 association    一对多:collection
	    column:列名（数据库表，sql查询）       property:属性名字 -->
	    <association property="Supplier" javaType="com.web.entity.Supplier">
	    <id column="supplierId" jdbcType="INTEGER" property="supplierid" />
		    <result column="name" jdbcType="VARCHAR" property="name" />
		    <result column="address" jdbcType="VARCHAR" property="address" />
		    <result column="tel" jdbcType="VARCHAR" property="tel" />
		    <result column="creditSituation" jdbcType="VARCHAR" property="creditsituation" />
		    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
		    
		
	    </association>
  </resultMap>
  
  <select id="getDrugByid"  parameterType="int"  resultMap="mymap">
  
  SELECT *
FROM
supplier,drugs
WHERE
supplier.supplierId=drugs.supplierId
AND
drugs.drugsId=#{drugsid}
</select>
  
  <resultMap type="com.web.entity.Drugs" id="mymap">
      <id column="drugsId" jdbcType="INTEGER" property="drugsid" />
    <result column="drugStorageid" jdbcType="INTEGER" property="drugstorageid" />
    <result column="drugsName" jdbcType="VARCHAR" property="drugsname" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="manufactureDate" jdbcType="VARCHAR" property="manufacturedate" />
    <result column="guaranteeTime" jdbcType="VARCHAR" property="guaranteetime" />
    <result column="supplierId" jdbcType="INTEGER" property="supplierid" />
	    
	    <!-- 多对一 association    一对多:collection
	    column:列名（数据库表，sql查询）       property:属性名字 -->
	    <association property="Supplier" javaType="com.web.entity.Supplier">
	    <id column="supplierId" jdbcType="INTEGER" property="supplierid" />
		    <result column="name" jdbcType="VARCHAR" property="name" />
		    <result column="address" jdbcType="VARCHAR" property="address" />
		    <result column="tel" jdbcType="VARCHAR" property="tel" />
		    <result column="creditSituation" jdbcType="VARCHAR" property="creditsituation" />
		    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
		    
		
	    </association>
  </resultMap>
  <update id="updateDrugs" parameterType="com.web.entity.Drugs" >
      UPDATE  drugs,supplier
      SET
      supplier.name = #{supplier.name},
      amount = #{amount,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      WHERE
       drugs.supplierid=supplier.supplierid AND drugs.drugsid=#{drugsid,jdbcType=INTEGER}
  </update>
  
  <update id="delsup">
UPDATE 
drugs
SET
specifications='0'
WHERE
drugsId=#{drugsid}
  </update>
  
</mapper>